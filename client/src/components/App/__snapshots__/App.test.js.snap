// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match snapshot when form is active 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <h1
                    className="App-title"
          >
                    robot
                    <span
                              className="header--sub"
                    >
                              Portal
                    </span>
          </h1>
          <h2
                    className="user-name"
          >
                    Welcome, Dr. Robert Ford!
          </h2>
</header>,
        <main>
          <RobotContainer
                    removeRobot={[Function]}
                    robots={Array []}
                    triggerForm={[Function]}
          />
          <RobotForm
                    addRobot={[Function]}
                    editRobot={[Function]}
                    editing={null}
          />
</main>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="App-title"
>
              robot
              <span
                            className="header--sub"
              >
                            Portal
              </span>
</h1>,
            <h2
              className="user-name"
>
              Welcome, Dr. Robert Ford!
</h2>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "robot",
                <span
                  className="header--sub"
>
                  Portal
</span>,
              ],
              "className": "App-title",
            },
            "ref": null,
            "rendered": Array [
              "robot",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Portal",
                  "className": "header--sub",
                },
                "ref": null,
                "rendered": "Portal",
                "type": "span",
              },
            ],
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome, Dr. Robert Ford!",
              "className": "user-name",
            },
            "ref": null,
            "rendered": "Welcome, Dr. Robert Ford!",
            "type": "h2",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <RobotContainer
              removeRobot={[Function]}
              robots={Array []}
              triggerForm={[Function]}
/>,
            <RobotForm
              addRobot={[Function]}
              editRobot={[Function]}
              editing={null}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "removeRobot": [Function],
              "robots": Array [],
              "triggerForm": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addRobot": [Function],
              "editRobot": [Function],
              "editing": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <h1
                        className="App-title"
            >
                        robot
                        <span
                                    className="header--sub"
                        >
                                    Portal
                        </span>
            </h1>
            <h2
                        className="user-name"
            >
                        Welcome, Dr. Robert Ford!
            </h2>
</header>,
          <main>
            <RobotContainer
                        removeRobot={[Function]}
                        robots={Array []}
                        triggerForm={[Function]}
            />
            <RobotForm
                        addRobot={[Function]}
                        editRobot={[Function]}
                        editing={null}
            />
</main>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="App-title"
>
                robot
                <span
                                className="header--sub"
                >
                                Portal
                </span>
</h1>,
              <h2
                className="user-name"
>
                Welcome, Dr. Robert Ford!
</h2>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "robot",
                  <span
                    className="header--sub"
>
                    Portal
</span>,
                ],
                "className": "App-title",
              },
              "ref": null,
              "rendered": Array [
                "robot",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Portal",
                    "className": "header--sub",
                  },
                  "ref": null,
                  "rendered": "Portal",
                  "type": "span",
                },
              ],
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome, Dr. Robert Ford!",
                "className": "user-name",
              },
              "ref": null,
              "rendered": "Welcome, Dr. Robert Ford!",
              "type": "h2",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <RobotContainer
                removeRobot={[Function]}
                robots={Array []}
                triggerForm={[Function]}
/>,
              <RobotForm
                addRobot={[Function]}
                editRobot={[Function]}
                editing={null}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "removeRobot": [Function],
                "robots": Array [],
                "triggerForm": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "addRobot": [Function],
                "editRobot": [Function],
                "editing": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <h1
                    className="App-title"
          >
                    robot
                    <span
                              className="header--sub"
                    >
                              Portal
                    </span>
          </h1>
          <h2
                    className="user-name"
          >
                    Welcome, Dr. Robert Ford!
          </h2>
</header>,
        <main>
          <RobotContainer
                    removeRobot={[Function]}
                    robots={Array []}
                    triggerForm={[Function]}
          />
</main>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="App-title"
>
              robot
              <span
                            className="header--sub"
              >
                            Portal
              </span>
</h1>,
            <h2
              className="user-name"
>
              Welcome, Dr. Robert Ford!
</h2>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "robot",
                <span
                  className="header--sub"
>
                  Portal
</span>,
              ],
              "className": "App-title",
            },
            "ref": null,
            "rendered": Array [
              "robot",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Portal",
                  "className": "header--sub",
                },
                "ref": null,
                "rendered": "Portal",
                "type": "span",
              },
            ],
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome, Dr. Robert Ford!",
              "className": "user-name",
            },
            "ref": null,
            "rendered": "Welcome, Dr. Robert Ford!",
            "type": "h2",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <RobotContainer
              removeRobot={[Function]}
              robots={Array []}
              triggerForm={[Function]}
/>,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "removeRobot": [Function],
              "robots": Array [],
              "triggerForm": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <h1
                        className="App-title"
            >
                        robot
                        <span
                                    className="header--sub"
                        >
                                    Portal
                        </span>
            </h1>
            <h2
                        className="user-name"
            >
                        Welcome, Dr. Robert Ford!
            </h2>
</header>,
          <main>
            <RobotContainer
                        removeRobot={[Function]}
                        robots={Array []}
                        triggerForm={[Function]}
            />
</main>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="App-title"
>
                robot
                <span
                                className="header--sub"
                >
                                Portal
                </span>
</h1>,
              <h2
                className="user-name"
>
                Welcome, Dr. Robert Ford!
</h2>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "robot",
                  <span
                    className="header--sub"
>
                    Portal
</span>,
                ],
                "className": "App-title",
              },
              "ref": null,
              "rendered": Array [
                "robot",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Portal",
                    "className": "header--sub",
                  },
                  "ref": null,
                  "rendered": "Portal",
                  "type": "span",
                },
              ],
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome, Dr. Robert Ford!",
                "className": "user-name",
              },
              "ref": null,
              "rendered": "Welcome, Dr. Robert Ford!",
              "type": "h2",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <RobotContainer
                removeRobot={[Function]}
                robots={Array []}
                triggerForm={[Function]}
/>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "removeRobot": [Function],
                "robots": Array [],
                "triggerForm": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
